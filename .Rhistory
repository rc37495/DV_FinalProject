geom_text(data=dfnewv2,
mapping = aes(x=VETERAN_POPULATION, y=TOTAL_EXPENDITURE,label=ifelse(TOTAL_EXPENDITURE>15000000,as.character(STATE),'')),
hjust=0,
just=0
)
ggplot() +
coord_cartesian() +
scale_x_continuous() +
scale_y_continuous() +
layer(data=dfnewv2,
mapping=aes(x=VETERAN_POPULATION, y=TOTAL_EXPENDITURE, color=STATE),
stat="identity",
stat_params=list(),
geom="point",
geom_params=list(),
position=position_identity()
) +
stat_smooth(data=dfnewv2,
mapping = aes(x=VETERAN_POPULATION, y=TOTAL_EXPENDITURE),
method = "lm",
fullrange = TRUE,
se = FALSE
) +
geom_text(data=dfnewv2,
mapping = aes(x=VETERAN_POPULATION, y=TOTAL_EXPENDITURE,label=ifelse(TOTAL_EXPENDITURE>1500000,as.character(STATE),'')),
hjust=0,
just=0
)
ggplot() +
coord_cartesian() +
scale_x_continuous() +
scale_y_continuous() +
layer(data=dfnewv2,
mapping=aes(x=VETERAN_POPULATION, y=TOTAL_EXPENDITURE, color=STATE),
stat="identity",
stat_params=list(),
geom="point",
geom_params=list(),
position=position_identity()
) +
stat_smooth(data=dfnewv2,
mapping = aes(x=VETERAN_POPULATION, y=TOTAL_EXPENDITURE),
method = "lm",
fullrange = TRUE,
se = FALSE
) +
geom_text(data=dfnewv2,
mapping = aes(x=VETERAN_POPULATION, y=TOTAL_EXPENDITURE,label=ifelse(TOTAL_EXPENDITURE>15000000,as.character(STATE),'')),
hjust=0,
just=0
)
ggplot() +
coord_cartesian() +
scale_x_continuous() +
scale_y_continuous() +
layer(data=dfnewv2,
mapping=aes(x=VETERAN_POPULATION, y=TOTAL_EXPENDITURE, color=STATE),
stat="identity",
stat_params=list(),
geom="point",
geom_params=list(),
position=position_identity()
) +
stat_smooth(data=dfnewv2,
mapping = aes(x=VETERAN_POPULATION, y=TOTAL_EXPENDITURE),
method = "lm",
fullrange = TRUE,
se = FALSE
) +
geom_text(data=dfnewv2,
mapping = aes(x=VETERAN_POPULATION, y=TOTAL_EXPENDITURE,label=ifelse(TOTAL_EXPENDITURE>150000000,as.character(STATE),'')),
hjust=0,
just=0
)
ggplot() +
coord_cartesian() +
scale_x_continuous() +
scale_y_continuous() +
layer(data=dfnewv2,
mapping=aes(x=VETERAN_POPULATION, y=TOTAL_EXPENDITURE, color=STATE),
stat="identity",
stat_params=list(),
geom="point",
geom_params=list(),
position=position_identity()
) +
stat_smooth(data=dfnewv2,
mapping = aes(x=VETERAN_POPULATION, y=TOTAL_EXPENDITURE),
method = "lm",
fullrange = TRUE,
se = FALSE
) +
geom_text(data=dfnewv2,
mapping = aes(x=VETERAN_POPULATION, y=TOTAL_EXPENDITURE,label=ifelse(TOTAL_EXPENDITURE>150000000000,as.character(STATE),'')),
hjust=0,
just=0
)
ggplot() +
coord_cartesian() +
scale_x_continuous() +
scale_y_continuous() +
layer(data=dfnewv2,
mapping=aes(x=VETERAN_POPULATION, y=TOTAL_EXPENDITURE, color=STATE),
stat="identity",
stat_params=list(),
geom="point",
geom_params=list(),
position=position_identity()
) +
stat_smooth(data=dfnewv2,
mapping = aes(x=VETERAN_POPULATION, y=TOTAL_EXPENDITURE),
method = "lm",
fullrange = TRUE,
se = FALSE
) +
geom_text(data=dfnewv2,
mapping = aes(x=VETERAN_POPULATION, y=TOTAL_EXPENDITURE,label=ifelse(TOTAL_EXPENDITURE>15000000000,as.character(STATE),'')),
hjust=0,
just=0
)
ggplot() +
coord_cartesian() +
scale_x_continuous() +
scale_y_continuous() +
layer(data=dfnewv2,
mapping=aes(x=VETERAN_POPULATION, y=TOTAL_EXPENDITURE, color=STATE),
stat="identity",
stat_params=list(),
geom="point",
geom_params=list(),
position=position_identity()
) +
stat_smooth(data=dfnewv2,
mapping = aes(x=VETERAN_POPULATION, y=TOTAL_EXPENDITURE),
method = "lm",
fullrange = TRUE,
se = FALSE
) +
geom_text(data=dfnewv2,
mapping = aes(x=VETERAN_POPULATION, y=TOTAL_EXPENDITURE,label=ifelse(TOTAL_EXPENDITURE>1500000000,as.character(STATE),'')),
hjust=0,
just=0
)
ggplot() +
coord_cartesian() +
scale_x_continuous() +
scale_y_continuous() +
layer(data=dfnewv2,
mapping=aes(x=VETERAN_POPULATION, y=TOTAL_EXPENDITURE, color=STATE, label=STATE),
stat="identity",
stat_params=list(),
geom="point",
geom_params=list(),
position=position_identity()
) +
stat_smooth(data=dfnewv2,
mapping = aes(x=VETERAN_POPULATION, y=TOTAL_EXPENDITURE),
method = "lm",
fullrange = TRUE,
se = FALSE
) +
geom_text(data=dfnewv2,
mapping = aes(x=VETERAN_POPULATION, y=TOTAL_EXPENDITURE,label=ifelse(TOTAL_EXPENDITURE>1500000,as.character(STATE),'')),
hjust=0,
just=0
)
require(jsonlite)
require(RCurl)
require(dplyr)
require(ggplot2)
dfnewv2 <- data.frame(fromJSON(getURL(URLencode('skipper.cs.utexas.edu:5001/rest/native/?query="select * from dfnewv2"'),httpheader=c(DB='jdbc:oracle:thin:@sayonara.microlab.cs.utexas.edu:1521:orcl', USER='C##cs329e_rc37495', PASS='orcl_rc37495', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
dfnewv2$VETERAN_POPULATION=as.numeric(levels(dfnewv2$VETERAN_POPULATION))[dfnewv2$VETERAN_POPULATION]
dfnewv2 <- filter(dfnewv2, YEAR == 2008)
ggplot() +
coord_cartesian() +
scale_x_continuous() +
scale_y_continuous() +
layer(data=dfnewv2,
mapping=aes(x=VETERAN_POPULATION, y=TOTAL_EXPENDITURE, color=STATE, label=STATE),
stat="identity",
stat_params=list(),
geom="point",
geom_params=list(),
position=position_identity()
) +
stat_smooth(data=dfnewv2,
mapping = aes(x=VETERAN_POPULATION, y=TOTAL_EXPENDITURE),
method = "lm",
fullrange = TRUE,
se = FALSE
) +
geom_text(data=dfnewv2,
mapping = aes(x=VETERAN_POPULATION, y=TOTAL_EXPENDITURE,label=ifelse(TOTAL_EXPENDITURE>1500000,as.character(STATE),'')),
hjust=0,
just=0
)
ggplot() +
coord_cartesian() +
scale_x_continuous() +
scale_y_continuous() +
layer(data=dfnewv2,
mapping=aes(x=VETERAN_POPULATION, y=TOTAL_EXPENDITURE, color=STATE, label=STATE),
stat="identity",
stat_params=list(),
geom="point",
geom_params=list(),
position=position_identity()
) +
stat_smooth(data=dfnewv2,
mapping = aes(x=VETERAN_POPULATION, y=TOTAL_EXPENDITURE),
method = "lm",
fullrange = TRUE,
se = FALSE
) +
geom_text(data=dfnewv2,
mapping = aes(x=VETERAN_POPULATION, y=TOTAL_EXPENDITURE,label=ifelse(TOTAL_EXPENDITURE>1500000,as.character(STATE),'')),
hjust=0,
just=0
) +
theme(legend.position='none')
source('~/DataVisualization/DV_FinalProject/00 Doc/Scatterplot2.R')
source('~/DataVisualization/DV_FinalProject/00 Doc/Scatterplot1.R')
dfnewv2 <- data.frame(fromJSON(getURL(URLencode('skipper.cs.utexas.edu:5001/rest/native/?query="select * from dfnewv2"'),httpheader=c(DB='jdbc:oracle:thin:@sayonara.microlab.cs.utexas.edu:1521:orcl', USER='C##cs329e_rc37495', PASS='orcl_rc37495', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
dfnewv2$VETERAN_POPULATION=as.numeric(levels(dfnewv2$VETERAN_POPULATION))[dfnewv2$VETERAN_POPULATION]
dfnewv2 <- filter(dfnewv2, YEAR == 2008)
ggplot() +
coord_cartesian() +
scale_x_continuous() +
scale_y_continuous() +
layer(data=dfnewv2,
mapping=aes(x=VETERAN_POPULATION, y=TOTAL_EXPENDITURE, color=STATE, label=STATE),
stat="identity",
stat_params=list(),
geom="point",
geom_params=list(),
position=position_identity()
) +
stat_smooth(data=dfnewv2,
mapping = aes(x=VETERAN_POPULATION, y=TOTAL_EXPENDITURE),
method = "lm",
fullrange = TRUE,
se = FALSE
) +
geom_text(data=dfnewv2,
mapping = aes(x=VETERAN_POPULATION, y=TOTAL_EXPENDITURE,label=ifelse(TOTAL_EXPENDITURE>1500000,as.character(STATE),'')),
hjust=0,
just=0
) +
theme(legend.position='none')
source('~/DataVisualization/DV_FinalProject/00 Doc/Scatterplot1.R')
source('~/DataVisualization/DV_FinalProject/00 Doc/Scatterplot1.R')
dfnewv2 <- data.frame(fromJSON(getURL(URLencode('skipper.cs.utexas.edu:5001/rest/native/?query="select * from dfnewv2"'),httpheader=c(DB='jdbc:oracle:thin:@sayonara.microlab.cs.utexas.edu:1521:orcl', USER='C##cs329e_rc37495', PASS='orcl_rc37495', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
#
dfnewv2$VETERAN_POPULATION=as.numeric(levels(dfnewv2$VETERAN_POPULATION))[dfnewv2$VETERAN_POPULATION]
#
dfnewv2 <- filter(dfnewv2, YEAR == 2008)
#
ggplot() +
coord_cartesian() +
scale_x_continuous() +
scale_y_continuous() +
layer(data=dfnewv2,
stat="identity",
mapping=aes(x=VETERAN_POPULATION, y=TOTAL_EXPENDITURE, color=STATE, label=STATE),
stat_params=list(),
geom="point",
geom_params=list(),
position=position_identity()
) +
stat_smooth(data=dfnewv2,
mapping = aes(x=VETERAN_POPULATION, y=TOTAL_EXPENDITURE),
fullrange = TRUE,
method = "lm",
se = FALSE
) +
geom_text(data=dfnewv2,
mapping = aes(x=VETERAN_POPULATION, y=TOTAL_EXPENDITURE,label=ifelse(TOTAL_EXPENDITURE>1500000,as.character(STATE),'')),
hjust=0,
just=0
) +
theme(legend.position='none')
dfnewv2 <- data.frame(fromJSON(getURL(URLencode('skipper.cs.utexas.edu:5001/rest/native/?query="select * from dfnewv2"'),httpheader=c(DB='jdbc:oracle:thin:@sayonara.microlab.cs.utexas.edu:1521:orcl', USER='C##cs329e_rc37495', PASS='orcl_rc37495', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
dfnewv2$VETERAN_POPULATION=as.numeric(levels(dfnewv2$VETERAN_POPULATION))[dfnewv2$VETERAN_POPULATION]
dfnewv2 <- filter(dfnewv2, YEAR == 2009)
ggplot() +
coord_cartesian() +
scale_x_continuous() +
scale_y_continuous() +
layer(data=dfnewv2,
mapping=aes(x=VETERAN_POPULATION, y=TOTAL_EXPENDITURE, color=STATE),
stat="identity",
stat_params=list(),
geom="point",
geom_params=list(),
position=position_identity()
) +
stat_smooth(data=dfnewv2,
mapping = aes(x=VETERAN_POPULATION, y=TOTAL_EXPENDITURE),
fullrange = TRUE,
method = "lm",
se = FALSE
) +
geom_text(data=dfnewv2,
mapping = aes(x=VETERAN_POPULATION, y=TOTAL_EXPENDITURE,label=ifelse(TOTAL_EXPENDITURE>1500000000,as.character(STATE),'')),
hjust=0,
just=0
) +
theme(legend.position='none')
source('~/DataVisualization/DV_FinalProject/00 Doc/Scatterplot1.R')
require(jsonlite)
require(RCurl)
require(dplyr)
require(ggplot2)
dfnewv2 <- data.frame(fromJSON(getURL(URLencode('skipper.cs.utexas.edu:5001/rest/native/?query="select * from dfnewv2"'),httpheader=c(DB='jdbc:oracle:thin:@sayonara.microlab.cs.utexas.edu:1521:orcl', USER='C##cs329e_rc37495', PASS='orcl_rc37495', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
#
dfnewv2$VETERAN_POPULATION=as.numeric(levels(dfnewv2$VETERAN_POPULATION))[dfnewv2$VETERAN_POPULATION]
#
dfnewv2 <- filter(dfnewv2, YEAR == 2008)
#
ggplot() +
coord_cartesian() +
scale_x_continuous() +
scale_y_continuous() +
layer(data=dfnewv2,
mapping=aes(x=VETERAN_POPULATION, y=TOTAL_EXPENDITURE, color=STATE, label=COUNTY),
stat="identity",
stat_params=list(),
geom="point",
geom_params=list(),
position=position_identity()
) +
stat_smooth(data=dfnewv2,
mapping = aes(x=VETERAN_POPULATION, y=TOTAL_EXPENDITURE),
method = "lm",
fullrange = TRUE,
se = FALSE
) +
geom_text(data=dfnewv2,
mapping = aes(x=VETERAN_POPULATION, y=TOTAL_EXPENDITURE,label=ifelse(TOTAL_EXPENDITURE>1500000,as.character(STATE),'')),
hjust=0,
just=0
) +
theme(legend.position='none')
ggplot() +
coord_cartesian() +
scale_x_continuous() +
scale_y_continuous() +
layer(data=dfnewv2,
mapping=aes(x=VETERAN_POPULATION, y=TOTAL_EXPENDITURE, color=STATE, label=COUNTY),
stat="identity",
stat_params=list(),
geom="point",
geom_params=list(),
position=position_identity()
) +
stat_smooth(data=dfnewv2,
mapping = aes(x=VETERAN_POPULATION, y=TOTAL_EXPENDITURE),
method = "lm",
fullrange = TRUE,
se = FALSE
) +
geom_text(data=dfnewv2,
mapping = aes(x=VETERAN_POPULATION, y=TOTAL_EXPENDITURE,label=ifelse(TOTAL_EXPENDITURE>1500000,as.character(COUNTY),'')),
hjust=0,
just=0
) +
theme(legend.position='none')
dfnewv2 <- data.frame(fromJSON(getURL(URLencode('skipper.cs.utexas.edu:5001/rest/native/?query="select * from dfnewv2"'),httpheader=c(DB='jdbc:oracle:thin:@sayonara.microlab.cs.utexas.edu:1521:orcl', USER='C##cs329e_rc37495', PASS='orcl_rc37495', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
#
dfnewv2$VETERAN_POPULATION=as.numeric(levels(dfnewv2$VETERAN_POPULATION))[dfnewv2$VETERAN_POPULATION]
#
dfnewv2 <- filter(dfnewv2, YEAR == 2008)
#
ggplot() +
coord_cartesian() +
scale_x_continuous() +
scale_y_continuous() +
layer(data=dfnewv2,
mapping=aes(x=VETERAN_POPULATION, y=TOTAL_EXPENDITURE, color=STATE, label=STATE),
stat="identity",
stat_params=list(),
geom="point",
geom_params=list(),
position=position_identity()
) +
stat_smooth(data=dfnewv2,
mapping = aes(x=VETERAN_POPULATION, y=TOTAL_EXPENDITURE),
method = "lm",
fullrange = TRUE,
se = FALSE
) +
geom_text(data=dfnewv2,
mapping = aes(x=VETERAN_POPULATION, y=TOTAL_EXPENDITURE,label=ifelse(TOTAL_EXPENDITURE>1500000,as.character(STATE),'')),
hjust=0,
just=0
) +
theme(legend.position='none')
#
require(jsonlite)
require(RCurl)
require(dplyr)
require(ggplot2)
dfnewv2 <- data.frame(fromJSON(getURL(URLencode('skipper.cs.utexas.edu:5001/rest/native/?query="select * from dfnewv2"'),httpheader=c(DB='jdbc:oracle:thin:@sayonara.microlab.cs.utexas.edu:1521:orcl', USER='C##cs329e_rc37495', PASS='orcl_rc37495', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
dfnewv2$VETERAN_POPULATION=as.numeric(levels(dfnewv2$VETERAN_POPULATION))[dfnewv2$VETERAN_POPULATION]
dfnewv2 <- filter(dfnewv2, YEAR == 2009)
ggplot() +
coord_cartesian() +
scale_x_continuous() +
scale_y_continuous() +
layer(data=dfnewv2,
mapping=aes(x=VETERAN_POPULATION, y=TOTAL_EXPENDITURE, color=STATE),
stat="identity",
stat_params=list(),
geom="point",
geom_params=list(),
position=position_identity()
) +
stat_smooth(data=dfnewv2,
mapping = aes(x=VETERAN_POPULATION, y=TOTAL_EXPENDITURE),
method = "lm",
fullrange = TRUE,
se = FALSE
) +
geom_text(data=dfnewv2,
mapping = aes(x=VETERAN_POPULATION, y=TOTAL_EXPENDITURE,label=ifelse(TOTAL_EXPENDITURE>1500000000,as.character(STATE),'')),
hjust=0,
just=0
) +
theme(legend.position='none')
dfnewv2 <- data.frame(fromJSON(getURL(URLencode('skipper.cs.utexas.edu:5001/rest/native/?query="select * from dfnewv2"'),httpheader=c(DB='jdbc:oracle:thin:@sayonara.microlab.cs.utexas.edu:1521:orcl', USER='C##cs329e_rc37495', PASS='orcl_rc37495', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
#
dfnewv2$VETERAN_POPULATION=as.numeric(levels(dfnewv2$VETERAN_POPULATION))[dfnewv2$VETERAN_POPULATION]
#
dfnewv2 <- filter(dfnewv2, YEAR == 2008)
#
ggplot() +
coord_cartesian() +
scale_x_continuous() +
scale_y_continuous() +
layer(data=dfnewv2,
mapping=aes(x=VETERAN_POPULATION, y=TOTAL_EXPENDITURE, color=STATE, label=STATE),
stat="identity",
stat_params=list(),
geom="point",
geom_params=list(),
position=position_identity()
) +
stat_smooth(data=dfnewv2,
mapping = aes(x=VETERAN_POPULATION, y=TOTAL_EXPENDITURE),
method = "lm",
fullrange = TRUE,
se = FALSE
) +
geom_text(data=dfnewv2,
mapping = aes(x=VETERAN_POPULATION, y=TOTAL_EXPENDITURE,label=ifelse(TOTAL_EXPENDITURE>1500000,as.character(STATE),'')),
hjust=0,
just=0
) +
theme(legend.position='none')
#
shiny::runApp('04 Shiny')
shiny::runApp('04 Shiny')
shiny::runApp('04 Shiny')
shiny::runApp('04 Shiny')
require("jsonlite")
require("RCurl")
require("dplyr")
require("plyr")
require("reshape2")
require("ggplot2")
# get data from oracle
df <- data.frame(fromJSON(getURL(URLencode('skipper.cs.utexas.edu:5001/rest/native/?query="select * from DFNEWV2"'),httpheader=c(DB='jdbc:oracle:thin:@sayonara.microlab.cs.utexas.edu:1521:orcl', USER='C##cs329e_rc37495', PASS='orcl_rc37495', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
region <- data.frame(fromJSON(getURL(URLencode('skipper.cs.utexas.edu:5001/rest/native/?query="select * from REGION"'),httpheader=c(DB='jdbc:oracle:thin:@sayonara.microlab.cs.utexas.edu:1521:orcl', USER='C##cs329e_rc37495', PASS='orcl_rc37495', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
# merge two datasets
ds <- merge(df, region, by = "STATE")
# make new dataset
expenditure <- aggregate(TOTAL_EXPENDITURE ~ REGION,data=ds,sum)
pension <- aggregate(COMPENSATION_PENSION ~ REGION,data=ds,sum)
medical <- aggregate(MEDICAL_CARE ~ REGION,data=ds,sum)
opex <- aggregate(GENERAL_OPERATING_EXPENSES ~ REGION,data=ds,sum)
rehab <- aggregate(EDU_VOC_REHAB_EMP ~ REGION,data=ds,sum)
nds <- join_all(list(expenditure, pension, medical, opex, rehab), by = "REGION", type = "full")
# melt nds
nds <- melt(nds, id.vars="REGION")
# rename variable -> EXPENSE_TYPE and value -> EXPENSE
nds <- rename(nds, c("variable"="EXPENSE_TYPE", "value"="EXPENSE"))
# filter out territory region
nds <- nds[nds$REGION != 'TERRITORY',]
# rescale in preparation for heatmap
nds <- ddply(nds, .(EXPENSE_TYPE), transform, rescale = scale(EXPENSE))
# make crosstab
crosstab <- ggplot(nds, aes(EXPENSE_TYPE, REGION)) +
labs(title='Expenditures by Region') +
geom_tile(aes(fill = rescale), colour = "gray90") +
scale_fill_gradient(low = "green", high = "red") +
geom_text(aes(label=EXPENSE)) +
guides(fill=FALSE)
crosstab
shiny::runApp('04 Shiny')
shiny::runApp('04 Shiny')
shiny::runApp('04 Shiny')
library("dplyr", lib.loc="~/R/win-library/3.2")
library("ggplot2", lib.loc="~/R/win-library/3.2")
library("jsonlite", lib.loc="~/R/win-library/3.2")
library("RCurl", lib.loc="~/R/win-library/3.2")
library("shiny", lib.loc="~/R/win-library/3.2")
library("shinydashboard", lib.loc="~/R/win-library/3.2")
library("tidyr", lib.loc="~/R/win-library/3.2")
dfnewv2 <- data.frame(fromJSON(getURL(URLencode('skipper.cs.utexas.edu:5001/rest/native/?query="select * from dfnewv2"'),httpheader=c(DB='jdbc:oracle:thin:@sayonara.microlab.cs.utexas.edu:1521:orcl', USER='C##cs329e_rc37495', PASS='orcl_rc37495', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
dfnewv2 %>% ggplot(aes(x = STATE, y = TOTAL_EXPENDITURE, fill = STATE)) + facet_wrap(~YEAR) + geom_bar(stat = "identity") + ggtitle("State Spending on Veterans from 2008 to 2009") + ylab("Total Expenditure")
shiny::runApp('04 Shiny')
shiny::runApp('04 Shiny')
